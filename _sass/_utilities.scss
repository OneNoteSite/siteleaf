@import "global";
@import "type";


/* HELPER */

/* @function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }
  @return $number;
} */


@mixin font-smoothing($value: on) {
  @if $value == on {
     -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
		         font-smoothing: antialiased;
  } @else {
     -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
		         font-smoothing: auto;
  }
}

@mixin buttonHoverChanges($bg: $purpleBrand, $color: $white){
	&:hover {
		box-shadow: inset 0 0 0 1px $color;
		background: $bg;
		color: $color;
	}
}


/* LAYOUT */


@mixin absoluteSnapPseudo($top:false, $right:false, $bottom:false, $left:false) {
	@if $top    { top:    $top;    } @else { top:    0; }
	@if $right  { right:  $right;  } @else { right:  0; }
	@if $bottom { bottom: $bottom; } @else { bottom: 0; }
	@if $left   { left:   $left;   } @else { left:   0; }
	position: absolute;
	content: "";
}

@mixin roundedCorners() { border-radius: .25rem; }


/* DEBUG */

@mixin outline($color: gold) { outline: 1px solid $color; }

/* FONT */

@mixin sm-font-h1()        { font: $font-base-Headline     !important; }	// 34px
@mixin sm-font-h2()        { font: $font-base-Subhead      !important; }	// 26px
@mixin sm-font-h3()        { font: $font-base-SubheadSmall !important; }	// 16px
@mixin sm-font-h4()        { font: $font-base-Body         !important; }	// 18px		-> Make color black
@mixin sm-font-body()      { font: $font-base-Body         !important; }	// 18px
@mixin sm-font-bodySmall() { font: $font-base-BodySmall    !important; }	// 16px
@mixin sm-font-legal()     { font: $font-base-Legal        !important; }	// 12px