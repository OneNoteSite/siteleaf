@import "global";
@import "utilities";

////////////////////////////////////////////////////////////////////////////////
// 8:3 SIZING & LAYOUT ADJUSTMENTS

@mixin stackLinks(){
	display: inline-block;
	margin-right: 50%;
	padding: 0 $gutter-width;
	margin-left: -$gutter-width;
	line-height: 2 !important;
	&::before,
	&::after { display: none; }	
}

// Fix - Move All Sizing Variables to the top
////////////////////////////////////////////////////////////////////////////////

	$links-icon-height: $cell-Height;

	$sizing-spacer-width: $gutter-width-half;

	$horzLine-height: 1px;
	
	$section-base-padding-top-sm:      			($cell-Height*1) + ($cell-Margin*1); // 8rem
	$section-base-padding-top:         			($cell-Height*1) + ($cell-Margin*2); // 8rem
	$section-base-padding-top-md:      			($cell-Height*2) + ($cell-Margin*2); // 12rem
	$section-base-padding-top-lg:      			($cell-Height*2) + ($cell-Margin*3); // 14rem
	$section-base-padding-top-lg-qtr-first:	($cell-Height*3) + ($cell-Margin*1); // 20rem
	$section-base-padding-top-lg-half: 			($cell-Height*3) + ($cell-Margin*4); // 26rem
	
	
////////////////////////////////////////////////////////////////////////////////
// 8:3 SIZING & LAYOUT ADJUSTMENTS

main > section {

	padding: 0;
	
	// This is needed to deal with the float used for sizing and to ensure the correct height for the section
	> figure + hr,
	> hr:last-child { clear: both; }

	// This element ensures the Section ratio is 8:3 so half-width images are 4:3
	
	&::before { 
		clear: both;
		content: "";
		width:        $sizing-spacer-width;
		margin-left: -$sizing-spacer-width * 2;
		float: left;
		background: transparent;
		
		// * Fix - Lets do this mathmatically?
		@include Base  						{ padding-top: 37.5%; 				} // 0
		@include Large 						{ padding-top: 50%;   				} // 1232
		@include Large-Qtr-First 	{ padding-top: 47.37704918%; 	} // 1536
		@include Large-Half 			{ padding-top: 45.39473684%;  }	// 1840
		@include Large-Qtr-Last  	{ padding-top: 52.89473684%;  }	// 2144
		@include XLarge						{ padding-top: 50.32894737%;  }	// 2448	
	}
	
	&.columns::before,
	&.alert::before{ padding-top: 0; }
	
	// Adjust spacing at top 
	
	@include Base {
		padding-top: $section-base-padding-top-sm;
	}

	@include Medium-Half {
		&::before{ margin-top: -$section-base-padding-top-md; display: block; }
		padding-top: 						$section-base-padding-top-md;
	}
	
	@include Large { // 1232
		&::before { margin-top: -$section-base-padding-top-lg; }
		padding-top: 						 $section-base-padding-top-lg;
	} 
	
	@include Large-Qtr-First { // 1536
		&::before { margin-top: -$section-base-padding-top-lg-qtr-first; }
		padding-top: 						 $section-base-padding-top-lg-qtr-first;
	} 
	
	@include Large-Half { // 1840
		&::before { margin-top: -$section-base-padding-top-lg-half; }
		padding-top: 						 $section-base-padding-top-lg-half;
	}

}

////////////////////////////////////////////////////////////////////////////////

main > section,
main > header {
	
	////////////////////////////////////////////////////////////////////////////////
	
	$headerCapFrameAdjust:   1.0rem;
	$headerCapFrameAdjustXl: $headerCapFrameAdjust;

	$h1CapFrameAdjust:       0.25rem;
	$h1CapFrameAdjustMd:     0.375rem;	
	$h1CapFrameAdjustXl:     1.625rem;

	$h2CapFrameAdjust:       0.0625rem;
	$h2CapFrameAdjustMd:     0.25rem;
	$h2CapFrameAdjustLg:     0.125rem;
	$h2CapFrameAdjustXl:     0.9375rem;

	$h4CapFrameAdjust:       0.75rem;
	$h4CapFrameAdjustXl:     1.25rem;
	
	$textCapFrameAdjust:     0.75rem;
	$textCapFrameAdjustXl:   1.4375rem;

	////////////////////////////////////////////////////////////////////////////////

	display:     block;
	position:    relative;
	text-align:  left;
	box-sizing:  content-box;

	
	p, small, h1, h2, h3, h4, h5, h6, header, hgroup, ul, ol {
		display: block;
		box-sizing: border-box;
		margin:  0;
		padding: 0;
		position: relative;
		z-index: 10;
	}
	
	p strong > a { display: inline-block; }
	
	/* Control Width of Text */
	
	> p,
	> header,
	> hgroup {
		@include Medium          { padding-right: 8rem; }
		@include Medium-Half     { width: 50.0%;        }
		@include Large           { padding-right: 10rem; }
		@include Large-Qtr-Last  { padding-right: 10%;  }
	}
	
	@include Medium-Half{
		&.text-right > p, 
		&.text-right > header{
			margin-left: 50%;
			left: $gutter-width-half;
		}
		
		&.text-full-width > p,
		&.text-full-width > header,
		&.text-full-width > hgroup {
			margin: 0;
			padding-right: 0;
			width: auto;
		}
	}
	
	> header,
	> hgroup {
		margin-top:           -$headerCapFrameAdjust;
		padding-bottom: 2rem + $headerCapFrameAdjust;
		
		@include XLarge {
			margin-top:           -$headerCapFrameAdjustXl;
			padding-bottom: 6rem + $headerCapFrameAdjustXl;
		}
		
		h1 {
			@include Base    { top: -$h1CapFrameAdjust;   }
			@include Medium  { top: -$h1CapFrameAdjustMd; }
			@include XLarge  { top: -$h1CapFrameAdjustXl; }
		}
		
		h2 {
			@include Base    { top:  $h2CapFrameAdjust;   }
			@include Medium  { top: -$h2CapFrameAdjustMd; }
			@include Large   { top: -$h2CapFrameAdjustLg; padding-bottom: $h2CapFrameAdjustLg; }
			@include XLarge  { top: -$h2CapFrameAdjustXl; padding-bottom: 0; }
		}
	}
	
	h4 {
		margin-top:    -$h4CapFrameAdjust;
		padding-bottom: $h4CapFrameAdjust;
	}
	
	> p,
	> ul > li > p {
		margin-top:    -$textCapFrameAdjust;
		padding-bottom: $textCapFrameAdjust + $cell-Height;
		
		@include XLarge {
			margin-top:           -$textCapFrameAdjustXl;
			padding-bottom: 6rem + $textCapFrameAdjustXl;
		}
		
		&:last-of-type { padding-bottom: $textCapFrameAdjust + 3rem; }
	}
	
	// Button
	> p > a.button:first-child {
		
		@include buttonStyle($white, $purpleBrand);
		@include roundedCorners();
		@include font-smoothing(off);
		@include buttonHoverChanges($purpleBrand, $white, $purpleBrand);						
		
		display: inline-block;
		box-sizing: border-box;
		
		padding:   0 $base-btn-size;
		height:      $base-btn-size;
		line-height: $base-btn-size - .25rem !important;
		
		@include Medium-Half {
			height:      $base-btn-size-md-half;
			line-height: $base-btn-size-md-half - .125rem !important;
		}
		
		@include XLarge {
			line-height: $base-btn-size-md-half - .25rem !important;
		}
		
		@include Base   { margin-top: -.25rem;	}
		@include XLarge { margin-top: .5rem; }

	}
}

////////////////////////////////////////////////////////////////////////////////
// Handling Images	

main > section {

	$base-width: 50%;
	
	$width-l:     $base-width + $grid-column-width-m-h;
	$width-l-q-f: $base-width + $grid-column-width-l;
	$width-l-h:   $base-width + $grid-column-width-l-q-f;
	$width-l-q-l: $base-width + $grid-column-width-l-q-f * 2;
	$width-xl:    $base-width + $grid-column-width-l-h   * 2;
	
	> figure {

		position: relative;
		box-sizing: content-box;
		margin:  0 (-$gutter-width);
		padding: 0;
		overflow: hidden;
		
		@include Medium-Half     { width: $base-width;  }
		@include Large           { width: $width-l;     }
		@include Large-Qtr-First { width: $width-l-q-f; }
		@include Large-Half      { width: $width-l-h;   }
		@include Large-Qtr-Last  { width: $width-l-q-l; }
		@include XLarge          { width: $width-xl;    }

		@include Medium-Half {
			position: absolute;
			top:     0;
			bottom:  0;
			right:   -$gutter-width-half;
			padding: 0;
			margin:  0;
		}

		@include Large       		 { right: -($grid-column-width-m-h);       margin-right: (-$gutter-width-half); }
		@include Large-Qtr-First { right: -($grid-column-width-l        ); }
		@include Large-Half      { right: -($grid-column-width-l-q-f    ); }
		@include Large-Qtr-Last  { right: -($grid-column-width-l-q-f * 2); }
		@include XLarge          { right: -($grid-column-width-l-h   * 2); }

		// This is used for a quick check of the height by Javascript
		&.State-SizeCheck { height: auto !important; }

		// 4:3 sizing for Smaller break points where Images are inline
		&::before {
			content:"";
			width: 100%;
			padding-top: 75%;
			display: block;
		}
		
		@include Medium-Half { &::before{ display: none; } }

		img {
			right: 0;
			top:   0;
			height: 100%;
			width:  100%;
			position: absolute;
			display: block;
			z-index: 2;
			object-fit: cover;
		}
	}
	
	&.text-right > figure {
		@include Medium-Half 		 { left: -($gutter-width-half          ); }
		@include Large       		 { left: -($grid-column-width-m-h      ); margin-left: (-$gutter-width-half); }
		@include Large-Qtr-First { left: -($grid-column-width-l        ); }
		@include Large-Half      { left: -($grid-column-width-l-q-f    ); }
		@include Large-Qtr-Last  { left: -($grid-column-width-l-q-f * 2); }
		@include XLarge          { left: -($grid-column-width-l-h   * 2); }
	}
	
	&.image-full-bleed > figure {
		
		&::before { padding-top: 37.5%; }
		
		z-index: 1;
		
		// Set Width
		
		@include Medium-Half     { width: 2 * $base-width;  }
		@include Large           { width: 2 * $width-l;     }
		@include Large-Qtr-First { width: 2 * $width-l-q-f; }
		@include Large-Half      { width: 2 * $width-l-h;   }
		@include Large-Qtr-Last  { width: 2 * $width-l-q-l; }
		@include XLarge          { width: 2 * $width-xl;    }
		
		// Push out to the Edges
		
		@include Medium-Half     {
			padding: 0 $gutter-width-half; 
			left:  -$gutter-width-half; 
			right: -$gutter-width-half;
		}
		
		@include Large       		 { left: -($grid-column-width-m-h      ); }
		@include Large-Qtr-First { left: -($grid-column-width-l        ); }
		@include Large-Half      { left: -($grid-column-width-l-q-f    ); }
		@include Large-Qtr-Last  { left: -($grid-column-width-l-q-f * 2); }
		@include XLarge          { left: -($grid-column-width-l-h   * 2); }
		
		@include Large { margin-left: (-$gutter-width-half); }
		
		
	}
}

////////////////////////////////////////////////////////////////////////////////
// Full Bleed Color Background

main > header,
main > section.color-full-bleed {
	&::after {
		z-index: -10;
		@include absoluteSnapPseudo($left: -$gutter-width-half, $right: -$gutter-width-half);		
	}	
}

////////////////////////////////////////////////////////////////////////////////
// Full Bleed Color Background

main > section.color-full-bleed:after {
	background: $greyLight;
}

////////////////////////////////////////////////////////////////////////////////
// Horizontal Rule

main > section.rule-horizontal-bottom,
main > section.rule-horizontal-top {
	
	&::after {
		content: "";
		position: absolute;
		height: $horzLine-height;
		left:   -$gutter-width-half;
		right:  -$gutter-width-half;
		box-shadow: 0 $horzLine-height 0 rgba(0,0,0,.25);
		z-index: 3;
		@include Retina { height: $horzLine-height / 2; }
		@include Large  { left: $gutter-width-half; right: $gutter-width-half; }
	}
}

main > section.rule-horizontal-bottom::after { bottom: $horzLine-height; }

main > section.rule-horizontal-top::after    { top:    -$horzLine-height; }

////////////////////////////////////////////////////////////////////////////////
// Full Width Design Additions

main > header,
main > section.color-full-bleed,
main > section.rule-horizontal-bottom,
main > section.rule-horizontal-top {
	
	&::after {
		@include Large {
			margin-left:  -$gutter-width-half;
			margin-right: -$gutter-width-half;
			left:  -$percentSixth;
			right: -$percentSixth;
		}
		
		@include Large-Qtr-First{
			left:  -$percentEighth;
			right: -$percentEighth;
		}
		
		@include Large-Half{
			left:  -$percentTenth;
			right: -$percentTenth;
		}
		
		@include Large-Qtr-Last{
			left:  -$percentTenth * 2;
			right: -$percentTenth * 2;
		}
		
		@include XLarge{
			left:  -$percentSixth;
			right: -$percentSixth;
		}
	}
}

////////////////////////////////////////////////////////////////////////////////
// Color Inverse - For Dark Backgrounds

main > section.color-inverse * {
	@include Medium-Half { color: $white; }
}

////////////////////////////////////////////////////////////////////////////////


main > section.columns {

	// these match the padding tops set above
	@include Base 						{ padding-bottom: .5 * $section-base-padding-top-sm; 						}
	@include Medium-Half 			{ padding-bottom: .5 * $section-base-padding-top-md; 						}
	@include Large 						{ padding-bottom: .5 * $section-base-padding-top-lg; 						} 
	@include Large-Qtr-First	{ padding-bottom: .5 * $section-base-padding-top-lg-qtr-first; 	} 
	@include Large-Half 			{ padding-bottom: .5 * $section-base-padding-top-lg-half; 			}
	
	.icon-svg {
		height:  6rem;
		display: block;
		> svg {
			display: block;
			width:  4.25rem;
			height: 4.25rem;
			position: relative;
			left: -.125rem;
			top:  -.125rem;
			fill: $charcoalLight;
		}		
	}
	
	.icon-svg + h4 {
		padding-top: $gutter-width-half;
	}
	
	h4{ margin-bottom: $gutter-width-half; }

	p small {
		padding-top:    .5rem;
		margin-bottom: -.5rem;
		
		a {
			display: inline-block;
			text-decoration: none;
			
			// Spacers
			
			&:after {
				content: "";
				display: inline-block;
				padding-right: .75rem;
			}
			
			&:not(:first-child){
				&::before{
					content: "| ";
					color: $greyDark;
					padding-right: .75rem;					
				}			
			}
		}
	}

	@include Medium {
		ul {
			display: block;
			font-size: 0 !important;
			li {
				position: relative;
				display: inline-block;
				vertical-align: top;
				
				// We need to adjust for columns. We shouldn't have more than 4 in total
				& + li 						{ left: $gutter-width * 1; }
				& + li + li  			{ left: $gutter-width * 2; }
				& + li + li + li 	{ left: $gutter-width * 3; }
				
				a { @include stackLinks(); }
			}
		}		
	}
	
	////////////////////////////////////////////////////////////////////////////////	
	// Bottom Links 
	
	&#links {
		
		li {
			
			@include XLarge {
				a, h4 { @include sm-font-bodySmall(); }
			}

			a {
				@include stackLinks();
				color: $charcoalRegular;
				white-space: nowrap;
				min-width: 40%;

				&:hover { color: $charcoalDark; }
			}
			
			&.icons-only { 
				height:      $links-icon-height;
				line-height: $links-icon-height !important;
				padding-bottom: $links-icon-height;
				font-size: 0 !important;
				
				a {
					margin:  0 $gutter-width/4;
					padding: 0;
					line-height: 0 !important;
					overflow: hidden;
					height: $links-icon-height;
					min-width: 0;

					&:first-child { margin-left: 0; }
					
					svg { left: auto; }
				}
				
				a       > .icon-svg > svg{ fill: $charcoalRegular; }
				a:hover > .icon-svg > svg{ fill: $charcoalDark; 	 }
			}
			
			&.align-right {
				@include Medium {	
					text-align: right;
					
					a:last-child  { margin-right: 0; }
					
					&.icons-only {
						&:first-child {
							position: absolute;
							right: 0;
						}
						& + li 						{ left: $gutter-width * 0; }
						& + li + li  			{ left: $gutter-width * 1; }
						& + li + li + li 	{ left: $gutter-width * 2; }
					}
				}
			}
		}
	}
	


	////////////////////////////////////////////////////////////////////////////////
	// Horizontal Positioning
		
	// Fix - These should be a function
	@include Medium {
		$gutterCount: 3;
		ul { margin-right: $gutter-width * $gutterCount;
			li { width: 100% / ($gutterCount + 1); }
		}
		&#links li.align-right.icons-only:first-child { margin-right: -($gutter-width * $gutterCount); }	
	}
	
	@include Medium-Half {
		$gutterCount: 5;
		ul { margin-right: $gutter-width * $gutterCount;
			li { width: 100% / ($gutterCount + 1); }
		}
		&#links li.align-right.icons-only:first-child { margin-right: -($gutter-width * $gutterCount); }	
	}
	
	@include Large-Qtr-First {
		$gutterCount: 7;
		ul { margin-right: $gutter-width * $gutterCount;
			li { width: 100% / ($gutterCount + 1); }
		}
		&#links li.align-right.icons-only:first-child { margin-right: -($gutter-width * $gutterCount); }
	}
	
	@include Large-Half {
		$gutterCount: 9;
		ul { margin-right: $gutter-width * $gutterCount;
			li { width: 100% / ($gutterCount + 1); }
		}
		&#links li.align-right.icons-only:first-child { margin-right: -($gutter-width * $gutterCount); }
	}
	
	@include XLarge {
		$gutterCount: 11;
		ul { margin-right: $gutter-width * $gutterCount;
			li { width: 100% / ($gutterCount + 1); }
		}	
		&#links li.align-right.icons-only:first-child { margin-right: -($gutter-width * $gutterCount); }	
	}
}


////////////////////////////////////////////////////////////////////////////////
// Unused


/*
	ul.columns-thirds {
		$adjust-middle: 2rem;
		$adjust-last:   4rem;
		font-size: 0 !important;
		padding-right: $adjust-last;
		
		li {
			display: inline-block;
			width: 33.333333333%;
			
			& + li      { margin: 0 (-$adjust-middle) 0 $adjust-middle; }
			& + li + li { margin: 0 (-$adjust-last  ) 0 $adjust-last;   }
		}
	}
*/


////////////////////////////////////////////////////////////////////////////////
		
	/*
		&::before,
		&::after { display: block; }
	*/
		
		
		/*
		&::after{
			z-index: 1;
			@include absoluteSnapPseudo();

			background-color: $cyan;
			
			@include Medium          { background-color: $green;  }
			@include Medium-Qtr      { background-color: $teal;  }
			@include Medium-Half     { background-color: $redChalk; }
			@include Large           { background-color: $blueMist; }
			@include Large-Qtr-First { background-color: $apple;    }
			@include Large-Half      { background-color: $yellow;   }
			@include Large-Qtr-Last  { background-color: $orange;   }
			@include XLarge          { background-color: $lemon;    }
			
			@include Large { left: 1rem; }
		}
		*/
		


