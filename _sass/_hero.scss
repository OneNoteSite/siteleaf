@import "global";
@import "type";

/*
.top{
	height: 6rem;
}
*/

/*
	height: 100vh;
	min-height: 100vmin;
	max-height: 100vmin;
*/

main > header {
	
	//outline: 1px solid gold;
	
	$height: ($cellGroup-Height * 4) + $nav-Height;
	$topPadding: $nav-Height + $cellGroup-Height + $cell-HeightWithMargin;
	$groupHeight: $cell-HeightWithMargin + $cell-Margin;
	$horzPadding: $gutter-width-half/4;
	$headlineAdjustment: -.125rem;
	
	position: relative;
	box-sizing: border-box;

	height:     $height;
	min-height: $height;
	max-height: $height;
	
	z-index: 1;
	
	padding: $topPadding $horzPadding 0 $horzPadding;
	margin:  0rem;
	
	-webkit-transition: height .2 ease;
	transition:         height .2 ease;
	
	// Background Color
	&::before{
		@include absoluteSnapPseudo($left: -1rem, $right: -1rem);
		background-color: $purpleBrand;
		background-color: #C1C1C1;
		z-index: -1;
	}
	
	> hgroup {

		position: relative;
		box-sizing: content-box;
		display: block;
		min-height: $groupHeight;
		font-size: 0 !important;
		
		> * {
			display: inline-block;
			min-height: $groupHeight;
			vertical-align: top;			
		}
		
		#hero-logo {
			width: $percentThird;
			padding-left: $gutter-width-half;
			svg {
				display: block;
				width: auto;
				height: 8rem;
				margin-right: $gutter-width;
			}
		}
		
		h1{
			//outline: 1px solid red;
			position: relative;
			top: 1rem + $headlineAdjustment;
			width: auto !important;
			-webkit-font-smoothing: antialiased;
			margin: 0;
		}
		
		ul{
			//outline: 1px solid orange;
			padding-top: $cell-HeightWithMargin;
			display: block;
			color: black;
			position: relative;
			font-size: 0 !important;
			margin: 0 0;
			
			li{
				box-sizing: border-box;
				display: inline-block;
				height: $cell-HeightWithMargin;
				min-width: 25%;
				padding: 0 1rem;

				a{
					box-sizing: border-box;
					display: block;
					height: $cell-HeightWithMargin;
					text-decoration: none;
					padding: 1.5rem 2rem;
					text-align: center;
					-webkit-transition: all 1 ease;
					transition: all 1 ease;
					-webkit-transform: scale(1);
					-webkit-transform-origin: top middle;
					transform-origin: top middle;

					&:hover{
						text-decoration: none;			
						opacity: .66
					}
				}
				
				&.action  a,
				&.text    a { color: #fff; }
				&.account a { color: #C1C1C1; background-color: #fff; }
				&.action  a { box-shadow: inset 0 0 0 1px #fff; }
				&.text    a { opacity: .5; }
			}
		}
	}
// 	.devices{ display: none; }
}

/* ******************************************************* */

/*
body.education > header {

	$height: ($cellGroup-Height * 3) + $nav-Height;
	
	height:     $height;
	min-height: $height;
	max-height: $height;
	
	text-align: left;

	// Fix - this makes it correct. Seems like the percentages are off	
	> div { padding-left: 2px; }

	h1 {
		margin-left:  0;
		margin-right: 0;
		@include Large { width: 51%; }

		padding-top: $nav-Height + 1rem;
		div{ display: block; }
	}
	
	p{
		margin-top: -.3rem;
		@include Large { width: 50%; }
		div{ display: block; }
	}
	
	.form {
		margin-top: 5rem;
		width: 50%;
		margin-left: 0;
		margin-right: 0;
		position: relative;
		top: -.3rem;
	}
	
	fieldset{
		width: 66.6666666666%;
		position: relative;
		height: 4rem;
	}

	input[type=email],
	input[type=button],
	button {
		position: absolute;
		top:     0;
		bottom:  0;
		padding: 0;
		-webkit-appearance: none;
		line-height: 2.75rem !important;
	}

	input[type=email] {
		right: 1.5rem;
		left: 0rem;
		outline: none;
		width: calc(100% - 1.5rem);	
		background-color: transparent;
		box-shadow: inset 0 -1px 0 0 #fff;
		&::-webkit-input-placeholder           { color: rgba(255,255,255,0.66); }
		&:hover { &::-webkit-input-placeholder { color: rgba(255,255,255,0.33); }}
	}
	
	input[type=button]{
		margin-left: 1rem;
		margin-left: .75rem;
		left: 100%;
		width: 10rem;
		text-align: center;
		background: $white;
		color: #7030a0;
		cursor: pointer;
		padding-bottom: .25rem;
	}
	
	figure {
		$position-adjust: 3rem;
		position: absolute;
		top: 0;
		padding: $nav-Height 0 0 0;
		left: 50%;
		right: -1rem;
		overflow: hidden;
		margin-left: -($position-adjust);
		
		&:hover {
			#Circle {
				stroke-dashoffset: 0;
			}
		}
		
		.imageContainer{
			height: 62rem;
			margin: 3rem 0 0 0;
			position: relative;
			width: 104rem;
		}
		
		img{
			width: auto;
			height: 62rem;
		}
		
		#inking #box {
			display: none;
		}
		
		#Circle {
			$length: 160;
			stroke-dasharray: $length, $length;
			stroke-dashoffset: $length;
			pointer-events: all;
			-webkit-transition: stroke-dashoffset .5s ease-out;
		}

		.drawOverlay {
			position: absolute;
			top:    0;
			left:   0;
			height: 62rem;
			width: 104rem;
		}
	}
}
*/



/* ******************************************************* */

/*
body > figure.color {
	margin-top: 5rem;
	padding: $gutter-width $gutter-width-half;
	font-size: 0px !important;
	
	h2 {}
	
	h3 {
		margin-top: 3rem;
		position: relative;
		min-height: 3rem;
		color: #999;
		&::before{
			content: "";
			position: absolute;
			left: 0;
			right: 0;
			height: 1px;
			background-color: #ccc;
		}
	}
	
	dl, dt, dd {
		margin:  0;
		padding: 0;
		vertical-align: top;		
	}	
	
	dl {
		font-size: 0px !important;
		padding-top: 4rem;
	}
	
	dt{
		display: inline-block;
		width:  33.33333333333334%;
		height: 12rem;
		color: #fff;
		text-indent: .5rem;
		text-transform: capitalize;
		position: relative;
		&.purpleBrand, &.purpleBrandDark, &.purpleBrandLight {
			width: 100%;
			& + dd { left: -100%; }
		}
		&.purpleBrand{
			height: 24rem;
		}
		&.purpleBrandDark, &.purpleBrandLight {
			height: 6rem;
		}
	}
	
	dd{
		box-sizing: border-box;
		display: inline-block;
		width:  0;
		height: 14rem;
		padding-top: 3rem;
		vertical-align: top;
		position: relative;
		left: -33.33333333333334%;
		text-indent: .5rem;
		padding-bottom: 8rem;
		color: #fff;
		
	}
	
	> p {
		width: 100%;
		@include Medium{ width: 50%; }
		display: inline-block;
		margin: 0;
		vertical-align: top;
		position: relative;
		box-sizing: border-box;
		padding-bottom: .75rem;
		padding-top: 2.25rem;
		&:first-child { top: -1rem; }
	}
	
	@include Medium {
		> p:nth-of-type(odd) { padding-right: 1rem;
			& + p              { padding-left:  1rem; }
		}		
	}	
}
*/








